创建一个空目录: mkdir <name>
切换目录: cd <name>
显示当前目录路径: pwd
查看当前目录内容: ls
初始化一个Git仓库: git init
将修改从工作区提交到暂存区: git add <file>
将修改从暂存区提交到分支: git commit -m "message"

查看工作区状态: git status
查看工作区中某个文件的修改内容: git diff <file>

查看版本日志: git log
用简洁的形式显示版本日志: git log --pretty=oneline
用更加简洁的形式显示版本日志: git log --pretty=oneline --abbrev-commit
查看命令历史: git reflog
回退到上一个版本: git reset --hard HEAD^
回退到之前或未来的某一个版本: git reset --hard commit_id

撤销工作区的修改: git restore <file>
撤销暂存区的修改，执行完后修改回到工作区: git restore --staged <file>
工作区层面上的删除文件: 手动删除 或 rm <file>
暂存区层面上的删除文件: git rm <file>

创建SSH Key，需要创建在用户的主目录下: ssh-keygen -t rsa -C "youremail@example.com"
关联一个远程库: git remote add origin git@github.com:KangShicong/repo-name.git
第一次推送master分支的内容并关联本地master分支和远程master分支: git push -u origin master
在第一次推送后再进行推送: git push origin master
查看远程库的信息: git remote -v
解除本地与远程库的绑定关系: git remote rm <name> 
把远程库克隆到本地: git clone git@github.com:KangShicong/repo-name.git

查看分支: git branch
创建分支: git branch <name>
切换分支: git switch <name> 或 git checkout <name>
创建+切换分支: git switch -c <name> 或 git checkout -b <name>
合并某分支到当前分支: git merge <name>
删除分支: git branch -d <name>

查看分支合并图: git log --graph --pretty=oneline
普通模式合并分支: git merge --no-ff -m "message" <name>
储藏工作现场: git stash
查看被储藏的工作现场: git stash list
恢复被储藏的工作现场: git stash apply stash@{number}
删除储藏的工作现场: git stash drop stash@{number}
回复并删除被储藏的工作现场: git stash pop stash@{number}
复制一个特定的提交到当前分支: git cherry-pick <commit>
想要丢弃一个没有被合并的分支: git branch -D <name>

创建远程库某分支到本地并且切换到该分支: git switch -c <branch-name> <repo-name>/<branch-name>
把远程库中某分支的最新提交抓取到本地库的对应分支: git pull
建立本地分支与远程分支的关联: git branch --set-upstream-to=origin/<branch-name> <branch-name>
把本地未推送到远程库的分叉提交历史整理城直线: git rebase

给最新提交的commit打上标签: git tag <tag-name>
给指定的commit打上标签: git tag <tag-name> commit_id
指定标签信息: git tag -a <tag-name> -m "message"
查看所有标签: git tag
查看标签信息: git show <tag-name>
推送某个标签到远程库: git push origin <tag-name>
一次性推送全部推送尚未推送到远程库的本地标签: git push origin --tags
删除一个本地标签: git tag -d <tag-name>
删除一个远程标签: git push origin :refs/tags/<tag-name>